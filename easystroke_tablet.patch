--- easystroke-0.5.5.1/win.cc	2011-08-16 10:11:40.000000000 +0200
+++ easystroke-0.5.5.1-mod/win.cc	2011-08-30 07:16:39.000000000 +0200
@@ -158,6 +158,10 @@
 	prefs.tray_icon.connect(new Notifier(sigc::mem_fun(*this, &Win::show_hide_icon)));
 	disabled.connect(new Notifier(sigc::mem_fun(*this, &Win::timeout)));
 
+	WIDGET(Gtk::MenuItem, menu_preferences, _("_Preferences"), true);
+	menu.append(menu_preferences);
+	menu_preferences.signal_activate().connect(sigc::mem_fun(*this, &Win::show_hide));
+
 	WIDGET(Gtk::CheckMenuItem, menu_disabled, _("D_isabled"), true);
 	menu.append(menu_disabled);
 	new MenuCheck(disabled, &menu_disabled);
@@ -194,11 +198,15 @@
 extern void icon_warning();
 
 static gboolean icon_clicked(GtkStatusIcon *status_icon, GdkEventButton *event, gpointer) {
-	if (event->button == 2)
+	if (event->button == 1)
 		disabled.set(!disabled.get());
 	return TRUE;
 }
 
+void Win::activate_flip() {
+	disabled.set(!disabled.get());
+}
+
 void Win::show_hide_icon() {
 	bool show = prefs.tray_icon.get();
 	if (show) {
@@ -206,10 +214,12 @@
 			return;
 		icon = Gtk::StatusIcon::create("");
 		icon->signal_size_changed().connect(sigc::mem_fun(*this, &Win::on_icon_size_changed));
-		icon->signal_activate().connect(sigc::mem_fun(*this, &Win::show_hide));
+		icon->signal_activate().connect(sigc::mem_fun(*this, &Win::activate_flip));
 		icon->signal_popup_menu().connect(sigc::mem_fun(*this, &Win::show_popup));
-		if (gtk_major_version >= 2 && gtk_minor_version >= 15)
+/*
+		if (gtk_major_version > 2 || ( gtk_major_version == 2 && gtk_minor_version >= 15 ) )
 			g_signal_connect(icon->gobj(), "button-release-event", G_CALLBACK(icon_clicked), NULL);
+*/
 	} else {
 		if (icon)
 			icon.reset();
--- easystroke-0.5.5.1/win.h	2011-08-16 10:11:40.000000000 +0200
+++ easystroke-0.5.5.1-mod/win.h	2011-08-30 07:17:08.000000000 +0200
@@ -57,6 +57,7 @@
 	boost::shared_ptr<Actions> actions;
 	boost::shared_ptr<Prefs> prefs_tab;
 	boost::shared_ptr<Stats> stats;
+	void activate_flip();
 	void show_hide();
 	void set_icon(RStroke stroke, bool invert);
 private:
